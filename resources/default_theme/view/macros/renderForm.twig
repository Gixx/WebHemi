{##
 # WebHemi.
 #
 # @copyright 2012 - 2017 Gixx-web (http://www.gixx-web.com)
 # @license   https://opensource.org/licenses/MIT The MIT License (MIT)
 # @link      http://www.gixx-web.com
 #}

{##
 # Renders the theme-defined <form> element and all its child elements.
 #
 # @see partials/form/formElement.twig
 #
 # @param <WebHemi\Form\ServiceInterface> form
 # @param <Array>                         options
 #
 # The `options` array is mostly user-defined when it's necessary. The only fixed structure is for overwrite the default template selection for form elements:
 #
 #         'templates': {'element_id_name': 'customElement'}
 #
 # ...where the `customElement` points to the 'partials/form/customElement.twig' file.
 #
 # @example - Render the MyForm, and use the myTextboxElement with extra data for the 'special_text' element:
 #
 # {% import '@WebHemi/macros/renderForm.twig' as _FORM %}
 # {% set options = {'specialCustomData': ['label':'Hello', 'placeholder': 'write here'], 'templates': {'special_text': 'myTextboxElement'}} %}
 # <html><body>
 # <div class="myForm">
 # {{ _FORM.renderForm(MyForm, options) }}
 # </div>
 # </body></html>
 #
 # The `options` array will be bypassed to all the elements so they can use it to gain information too.
 #}
{% macro renderForm(form, options) %}
    {% set options = options|default(false) %}
    {% if defined('@Theme/partials/form/formElement.twig') %}
        {% include '@Theme/partials/form/formElement.twig' with {'form': form, 'options': options} %}
    {% else %}
        {% include '@WebHemi/partials/form/formElement.twig' with {'form': form, 'options': options} %}
    {% endif %}
{% endmacro %}

{##
 # Renders the theme-defined form elements.
 #
 # @see partials/form/*Element.twig
 #
 # @param <WebHemi\Form\ElementInterface> formElement
 # @param <Array>                         options
 #
 # Options: see above
 #}
{% macro renderElement(formElement, options) %}
    {% set options = options|default(false) %}
    {% if options and formElement.getId() in options.templates|keys %}
        {% set elementTemplate = options.templates[formElement.getId()] ~ '.twig' %}
    {% else %}
        {% set elementTemplate = formElement.getType() ~ 'Element.twig' %}
    {% endif %}

    {% if defined('@Theme/partials/form/' ~ elementTemplate) %}
        {% include '@Theme/partials/form/' ~ elementTemplate with {'formElement': formElement, 'options': options} %}
    {% elseif defined('@WebHemi/partials/form/' ~ elementTemplate) %}
        {% include '@WebHemi/partials/form/' ~ elementTemplate with {'formElement': formElement, 'options': options} %}
    {% else %}
        {# default text input in the default template #}
        {% include '@WebHemi/partials/form/inputTextElement.twig' with {'formElement': formElement, 'options': options} %}
    {% endif %}
{% endmacro %}

{##
 # Renders the theme-defined error messages for the form elements.
 #
 # @see partials/errorBlock.twig
 #
 # @param <Array> errorMessages
 #
 # The structure of the errorMessages if the following:
 #
 # {
 #   'WebHemi\Validator\ValidatorClassName': ['Error message 1','Error message 2',...],
 #   'WebHemi\Validator\OtherValidatorClassName': ['Other error message 1','Other error message 2',...],
 # }
 #}
{% macro renderErrorBlock(errorMessages) %}
    {% if defined('@Theme/partials/errorBlock.twig') %}
        {% include '@Theme/partials/errorBlock.twig' with {'errorMessages': errorMessages} %}
    {% else %}
        {% include '@WebHemi/partials/errorBlock.twig' with {'errorMessages': errorMessages} %}
    {% endif %}
{% endmacro %}
